2021-10-11 20:16:14,089 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.9.5 (default, May 18 2021, 19:34:48) [GCC 7.3.0]
CUDA available: True
GPU 0,1,2,3: NVIDIA GeForce GTX 1080 Ti
CUDA_HOME: /usr/local/cuda-10.1
NVCC: Cuda compilation tools, release 10.1, V10.1.105
GCC: gcc (Ubuntu 6.5.0-2ubuntu1~18.04) 6.5.0 20181026
PyTorch: 1.8.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.2-Product Build 20210312 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.1, CUDNN_VERSION=7.6.3, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.2.2
OpenCV: 4.5.2
MMCV: 1.3.6
MMCV Compiler: GCC 7.5
MMCV CUDA Compiler: 10.1
MMDetection: 2.13.0+4fdf85c
------------------------------------------------------------

INFO:mmdet:Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.9.5 (default, May 18 2021, 19:34:48) [GCC 7.3.0]
CUDA available: True
GPU 0,1,2,3: NVIDIA GeForce GTX 1080 Ti
CUDA_HOME: /usr/local/cuda-10.1
NVCC: Cuda compilation tools, release 10.1, V10.1.105
GCC: gcc (Ubuntu 6.5.0-2ubuntu1~18.04) 6.5.0 20181026
PyTorch: 1.8.1
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.2-Product Build 20210312 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.1, CUDNN_VERSION=7.6.3, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.2.2
OpenCV: 4.5.2
MMCV: 1.3.6
MMCV Compiler: GCC 7.5
MMCV CUDA Compiler: 10.1
MMDetection: 2.13.0+4fdf85c
------------------------------------------------------------

2021-10-11 20:16:14,477 - mmdet - INFO - Distributed training: True
INFO:mmdet:Distributed training: True
2021-10-11 20:16:14,854 - mmdet - INFO - Config:
model = dict(
    type='TwoStageDetectorDA',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=False),
        norm_eval=True,
        style='caffe'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHeadAdaptive',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Split2FCBBoxHeadAdaptive',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=1,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))),
    train_cfg=dict(
        train_source=False,
        da=[
            dict(
                type='adversarial',
                feat='feat_neck_0',
                loss_weights=dict(adversarial=1.0),
                transform='sample',
                n_sample=32,
                lambd_weight=1,
                sample_shape=35)
        ],
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=False,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            pos_weight=-1,
            debug=False)),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100)))
dataset_type = 'CocoDataset'
data_root_src = 'data/PIROPO/'
data_root_tgt = 'data/MW-18Mar/'
classes = ('person', )
img_norm_cfg = dict(
    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)
train_pipeline_src = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(800, 800), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[103.53, 116.28, 123.675],
        std=[1.0, 1.0, 1.0],
        to_rgb=False),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
train_pipeline_tgt = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(800, 800), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[103.53, 116.28, 123.675],
        std=[1.0, 1.0, 1.0],
        to_rgb=False),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1333, 800),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[103.53, 116.28, 123.675],
                std=[1.0, 1.0, 1.0],
                to_rgb=False),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=2,
    train_src=dict(
        type='CocoDataset',
        ann_file='/data/COCO/annotations/person_train2017.json',
        img_prefix='/data/COCO/train2017',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(800, 800), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[103.53, 116.28, 123.675],
                std=[1.0, 1.0, 1.0],
                to_rgb=False),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ],
        classes=('person', )),
    train_tgt=dict(
        type='CocoDataset',
        ann_file='/data/PIROPO/omni_training_1a.json',
        img_prefix='None',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(800, 800), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[103.53, 116.28, 123.675],
                std=[1.0, 1.0, 1.0],
                to_rgb=False),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ],
        classes=('person', )),
    val=dict(
        type='CocoDataset',
        ann_file='/data/PIROPO/omni_test2.json',
        img_prefix='None',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[103.53, 116.28, 123.675],
                        std=[1.0, 1.0, 1.0],
                        to_rgb=False),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ],
        classes=('person', )),
    test=dict(
        type='CocoDataset',
        ann_file='data/MW-18Mar/test.json',
        img_prefix='data/MW-18Mar/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[103.53, 116.28, 123.675],
                        std=[1.0, 1.0, 1.0],
                        to_rgb=False),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ],
        classes=('person', )))
optimizer = dict(
    type='SGD',
    lr=0.01,
    momentum=0.9,
    weight_decay=0.0001,
    paramwise_cfg=dict(
        custom_keys=dict(
            backbone=dict(lr_mult=0),
            neck=dict(lr_mult=0),
            rpn_head=dict(lr_mult=0),
            roi_head=dict(lr_mult=0))))
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='fixed')
runner = dict(type='EpochBasedRunnerAdaptive', max_epochs=10)
checkpoint_config = dict(interval=200)
evaluation = dict(interval=1, metric='bbox')
log_config = dict(interval=1, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = 'mmdetection/checkpoints/faster_rcnn_r50_fpn_1x_coco-person_20201216_175929-d022e227_split.pth'
resume_from = None
workflow = [('train', 1)]
work_dir = 'WORK_DIRS/sweeps/adv_0_p/1a'
gpu_ids = range(0, 4)

INFO:mmdet:Config:
model = dict(
    type='TwoStageDetectorDA',
    backbone=dict(
        type='ResNet',
        depth=50,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        frozen_stages=1,
        norm_cfg=dict(type='BN', requires_grad=False),
        norm_eval=True,
        style='caffe'),
    neck=dict(
        type='FPN',
        in_channels=[256, 512, 1024, 2048],
        out_channels=256,
        num_outs=5),
    rpn_head=dict(
        type='RPNHead',
        in_channels=256,
        feat_channels=256,
        anchor_generator=dict(
            type='AnchorGenerator',
            scales=[8],
            ratios=[0.5, 1.0, 2.0],
            strides=[4, 8, 16, 32, 64]),
        bbox_coder=dict(
            type='DeltaXYWHBBoxCoder',
            target_means=[0.0, 0.0, 0.0, 0.0],
            target_stds=[1.0, 1.0, 1.0, 1.0]),
        loss_cls=dict(
            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),
        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),
    roi_head=dict(
        type='StandardRoIHeadAdaptive',
        bbox_roi_extractor=dict(
            type='SingleRoIExtractor',
            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),
            out_channels=256,
            featmap_strides=[4, 8, 16, 32]),
        bbox_head=dict(
            type='Split2FCBBoxHeadAdaptive',
            in_channels=256,
            fc_out_channels=1024,
            roi_feat_size=7,
            num_classes=1,
            bbox_coder=dict(
                type='DeltaXYWHBBoxCoder',
                target_means=[0.0, 0.0, 0.0, 0.0],
                target_stds=[0.1, 0.1, 0.2, 0.2]),
            reg_class_agnostic=False,
            loss_cls=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),
            loss_bbox=dict(type='L1Loss', loss_weight=1.0))),
    train_cfg=dict(
        train_source=False,
        da=[
            dict(
                type='adversarial',
                feat='feat_neck_0',
                loss_weights=dict(adversarial=1.0),
                transform='sample',
                n_sample=32,
                lambd_weight=1,
                sample_shape=35)
        ],
        rpn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.7,
                neg_iou_thr=0.3,
                min_pos_iou=0.3,
                match_low_quality=True,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=256,
                pos_fraction=0.5,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            allowed_border=-1,
            pos_weight=-1,
            debug=False),
        rpn_proposal=dict(
            nms_pre=2000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            assigner=dict(
                type='MaxIoUAssigner',
                pos_iou_thr=0.5,
                neg_iou_thr=0.5,
                min_pos_iou=0.5,
                match_low_quality=False,
                ignore_iof_thr=-1),
            sampler=dict(
                type='RandomSampler',
                num=512,
                pos_fraction=0.25,
                neg_pos_ub=-1,
                add_gt_as_proposals=False),
            pos_weight=-1,
            debug=False)),
    test_cfg=dict(
        rpn=dict(
            nms_pre=1000,
            max_per_img=1000,
            nms=dict(type='nms', iou_threshold=0.7),
            min_bbox_size=0),
        rcnn=dict(
            score_thr=0.05,
            nms=dict(type='nms', iou_threshold=0.5),
            max_per_img=100)))
dataset_type = 'CocoDataset'
data_root_src = 'data/PIROPO/'
data_root_tgt = 'data/MW-18Mar/'
classes = ('person', )
img_norm_cfg = dict(
    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)
train_pipeline_src = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(800, 800), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[103.53, 116.28, 123.675],
        std=[1.0, 1.0, 1.0],
        to_rgb=False),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
train_pipeline_tgt = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='Resize', img_scale=(800, 800), keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[103.53, 116.28, 123.675],
        std=[1.0, 1.0, 1.0],
        to_rgb=False),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(1333, 800),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[103.53, 116.28, 123.675],
                std=[1.0, 1.0, 1.0],
                to_rgb=False),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=2,
    train_src=dict(
        type='CocoDataset',
        ann_file='/data/COCO/annotations/person_train2017.json',
        img_prefix='/data/COCO/train2017',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(800, 800), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[103.53, 116.28, 123.675],
                std=[1.0, 1.0, 1.0],
                to_rgb=False),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ],
        classes=('person', )),
    train_tgt=dict(
        type='CocoDataset',
        ann_file='/data/PIROPO/omni_training_1a.json',
        img_prefix='None',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='Resize', img_scale=(800, 800), keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[103.53, 116.28, 123.675],
                std=[1.0, 1.0, 1.0],
                to_rgb=False),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ],
        classes=('person', )),
    val=dict(
        type='CocoDataset',
        ann_file='/data/PIROPO/omni_test2.json',
        img_prefix='None',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[103.53, 116.28, 123.675],
                        std=[1.0, 1.0, 1.0],
                        to_rgb=False),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ],
        classes=('person', )),
    test=dict(
        type='CocoDataset',
        ann_file='data/MW-18Mar/test.json',
        img_prefix='data/MW-18Mar/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(1333, 800),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[103.53, 116.28, 123.675],
                        std=[1.0, 1.0, 1.0],
                        to_rgb=False),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ],
        classes=('person', )))
optimizer = dict(
    type='SGD',
    lr=0.01,
    momentum=0.9,
    weight_decay=0.0001,
    paramwise_cfg=dict(
        custom_keys=dict(
            backbone=dict(lr_mult=0),
            neck=dict(lr_mult=0),
            rpn_head=dict(lr_mult=0),
            roi_head=dict(lr_mult=0))))
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='fixed')
runner = dict(type='EpochBasedRunnerAdaptive', max_epochs=10)
checkpoint_config = dict(interval=200)
evaluation = dict(interval=1, metric='bbox')
log_config = dict(interval=1, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = 'mmdetection/checkpoints/faster_rcnn_r50_fpn_1x_coco-person_20201216_175929-d022e227_split.pth'
resume_from = None
workflow = [('train', 1)]
work_dir = 'WORK_DIRS/sweeps/adv_0_p/1a'
gpu_ids = range(0, 4)

/home/thaddaus/anaconda3/envs/open-mmlab/lib/python3.9/site-packages/mmcv/cnn/utils/weight_init.py:118: UserWarning: init_cfg without layer key, if you do not define override key either, this init_cfg will do nothing
  warnings.warn(
/home/thaddaus/anaconda3/envs/open-mmlab/lib/python3.9/site-packages/mmcv/cnn/utils/weight_init.py:118: UserWarning: init_cfg without layer key, if you do not define override key either, this init_cfg will do nothing
  warnings.warn(
/home/thaddaus/anaconda3/envs/open-mmlab/lib/python3.9/site-packages/mmcv/cnn/utils/weight_init.py:118: UserWarning: init_cfg without layer key, if you do not define override key either, this init_cfg will do nothing
  warnings.warn(
/home/thaddaus/anaconda3/envs/open-mmlab/lib/python3.9/site-packages/mmcv/cnn/utils/weight_init.py:118: UserWarning: init_cfg without layer key, if you do not define override key either, this init_cfg will do nothing
  warnings.warn(
loading annotations into memory...
loading annotations into memory...
loading annotations into memory...
loading annotations into memory...
Done (t=5.49s)
creating index...
Done (t=5.51s)
creating index...
Done (t=5.71s)
creating index...
index created!
index created!
Done (t=6.11s)
creating index...
index created!
loading annotations into memory...
Done (t=0.00s)
creating index...
index created!
loading annotations into memory...
Done (t=0.00s)
creating index...
index created!
loading annotations into memory...
Done (t=0.00s)
creating index...
index created!
index created!
loading annotations into memory...
Done (t=0.00s)
creating index...
index created!
loading annotations into memory...
loading annotations into memory...
loading annotations into memory...
loading annotations into memory...
Done (t=0.02s)Done (t=0.02s)

creating index...
creating index...
index created!index created!

2021-10-11 20:16:28,729 - mmdet - INFO - load checkpoint from mmdetection/checkpoints/faster_rcnn_r50_fpn_1x_coco-person_20201216_175929-d022e227_split.pth
INFO:mmdet:load checkpoint from mmdetection/checkpoints/faster_rcnn_r50_fpn_1x_coco-person_20201216_175929-d022e227_split.pth
2021-10-11 20:16:28,729 - mmdet - INFO - Use load_from_local loader
INFO:mmdet:Use load_from_local loader
Done (t=0.02s)
creating index...
index created!
Done (t=0.02s)
creating index...
index created!
2021-10-11 20:16:28,930 - mmdet - WARNING - The model and loaded state dict do not match exactly

missing keys in source state_dict: da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_fc0.weight, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_fc0.bias, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_bn0.weight, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_bn0.bias, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_bn0.running_mean, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_bn0.running_var, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_fc1.weight, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_fc1.bias, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_bn1.weight, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_bn1.bias, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_bn1.running_mean, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_bn1.running_var, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_fc2.weight, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_fc2.bias

WARNING:mmdet:The model and loaded state dict do not match exactly

missing keys in source state_dict: da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_fc0.weight, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_fc0.bias, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_bn0.weight, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_bn0.bias, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_bn0.running_mean, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_bn0.running_var, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_fc1.weight, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_fc1.bias, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_bn1.weight, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_bn1.bias, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_bn1.running_mean, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_bn1.running_var, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_fc2.weight, da_heads.feat_neck_0_adversarial.classifier.dcls_feat_neck_0_fc2.bias

2021-10-11 20:16:28,938 - mmdet - INFO - Start running, host: thaddaus@wu02, work_dir: /home/thaddaus/MasterthesisCode/WORK_DIRS/sweeps/adv_0_p/1a
INFO:mmdet:Start running, host: thaddaus@wu02, work_dir: /home/thaddaus/MasterthesisCode/WORK_DIRS/sweeps/adv_0_p/1a
2021-10-11 20:16:28,938 - mmdet - INFO - workflow: [('train', 1)], max: 10 epochs
INFO:mmdet:workflow: [('train', 1)], max: 10 epochs
LOSSES:
{'loss_rpn_cls_tgt': [tensor(0.0856, device='cuda:0', grad_fn=<MulBackward0>), tensor(9.6750e-07, device='cuda:0', grad_fn=<MulBackward0>), tensor(2.5089e-06, device='cuda:0', grad_fn=<MulBackward0>), tensor(1.6171e-05, device='cuda:0', grad_fn=<MulBackward0>), tensor(6.3993e-05, device='cuda:0', grad_fn=<MulBackward0>)], 'loss_rpn_bbox_tgt': [tensor(0.0019, device='cuda:0', grad_fn=<MulBackward0>), tensor(0., device='cuda:0', grad_fn=<MulBackward0>), tensor(0., device='cuda:0', grad_fn=<MulBackward0>), tensor(0., device='cuda:0', grad_fn=<MulBackward0>), tensor(0., device='cuda:0', grad_fn=<MulBackward0>)], 'loss_cls_tgt': tensor(0.0331, device='cuda:0', grad_fn=<MulBackward0>), 'acc_tgt': tensor([99.8047], device='cuda:0'), 'loss_bbox_tgt': tensor(0.0039, device='cuda:0', grad_fn=<MulBackward0>), 'loss_feat_neck_0_adversarial': tensor(0.6988, device='cuda:0', grad_fn=<NllLossBackward>)}
LOSSES:
{'loss_rpn_cls_tgt': [tensor(0.0704, device='cuda:2', grad_fn=<MulBackward0>), tensor(8.7378e-07, device='cuda:2', grad_fn=<MulBackward0>), tensor(1.3460e-06, device='cuda:2', grad_fn=<MulBackward0>), tensor(1.4772e-05, device='cuda:2', grad_fn=<MulBackward0>), tensor(5.4689e-06, device='cuda:2', grad_fn=<MulBackward0>)], 'loss_rpn_bbox_tgt': [tensor(0.0026, device='cuda:2', grad_fn=<MulBackward0>), tensor(0., device='cuda:2', grad_fn=<MulBackward0>), tensor(0., device='cuda:2', grad_fn=<MulBackward0>), tensor(0., device='cuda:2', grad_fn=<MulBackward0>), tensor(0., device='cuda:2', grad_fn=<MulBackward0>)], 'loss_cls_tgt': tensor(0.1787, device='cuda:2', grad_fn=<MulBackward0>), 'acc_tgt': tensor([98.6328], device='cuda:2'), 'loss_bbox_tgt': tensor(0.0634, device='cuda:2', grad_fn=<MulBackward0>), 'loss_feat_neck_0_adversarial': tensor(0.6834, device='cuda:2', grad_fn=<NllLossBackward>)}
LOSSES:
{'loss_rpn_cls_tgt': [tensor(0.0780, device='cuda:1', grad_fn=<MulBackward0>), tensor(1.8784e-06, device='cuda:1', grad_fn=<MulBackward0>), tensor(1.4479e-06, device='cuda:1', grad_fn=<MulBackward0>), tensor(6.8267e-06, device='cuda:1', grad_fn=<MulBackward0>), tensor(6.3413e-07, device='cuda:1', grad_fn=<MulBackward0>)], 'loss_rpn_bbox_tgt': [tensor(0.0023, device='cuda:1', grad_fn=<MulBackward0>), tensor(0., device='cuda:1', grad_fn=<MulBackward0>), tensor(0., device='cuda:1', grad_fn=<MulBackward0>), tensor(0., device='cuda:1', grad_fn=<MulBackward0>), tensor(0., device='cuda:1', grad_fn=<MulBackward0>)], 'loss_cls_tgt': tensor(0.1059, device='cuda:1', grad_fn=<MulBackward0>), 'acc_tgt': tensor([99.2188], device='cuda:1'), 'loss_bbox_tgt': tensor(0.0337, device='cuda:1', grad_fn=<MulBackward0>), 'loss_feat_neck_0_adversarial': tensor(0.7575, device='cuda:1', grad_fn=<NllLossBackward>)}
LOSSES:
{'loss_rpn_cls_tgt': [tensor(0.0780, device='cuda:3', grad_fn=<MulBackward0>), tensor(1.4387e-06, device='cuda:3', grad_fn=<MulBackward0>), tensor(2.8237e-06, device='cuda:3', grad_fn=<MulBackward0>), tensor(1.0886e-05, device='cuda:3', grad_fn=<MulBackward0>), tensor(3.5133e-06, device='cuda:3', grad_fn=<MulBackward0>)], 'loss_rpn_bbox_tgt': [tensor(0.0023, device='cuda:3', grad_fn=<MulBackward0>), tensor(0., device='cuda:3', grad_fn=<MulBackward0>), tensor(0., device='cuda:3', grad_fn=<MulBackward0>), tensor(0., device='cuda:3', grad_fn=<MulBackward0>), tensor(0., device='cuda:3', grad_fn=<MulBackward0>)], 'loss_cls_tgt': tensor(0.1059, device='cuda:3', grad_fn=<MulBackward0>), 'acc_tgt': tensor([99.2188], device='cuda:3'), 'loss_bbox_tgt': tensor(0.0337, device='cuda:3', grad_fn=<MulBackward0>), 'loss_feat_neck_0_adversarial': tensor(0.6752, device='cuda:3', grad_fn=<NllLossBackward>)}
2021-10-11 20:16:57,875 - mmdet - INFO - Exp name: adv_0.py
INFO:mmdet:Exp name: adv_0.py
2021-10-11 20:16:57,875 - mmdet - INFO - Epoch [1][1/1]	lr: 1.000e-02, eta: 0:04:18, time: 28.704, data_time: 25.452, memory: 6559, loss_rpn_cls_tgt: 0.0781, loss_rpn_bbox_tgt: 0.0023, loss_cls_tgt: 0.1059, acc_tgt: 99.2188, loss_bbox_tgt: 0.0337, loss_feat_neck_0_adversarial: 0.7038, loss: 0.9237
INFO:mmdet:Epoch [1][1/1]	lr: 1.000e-02, eta: 0:04:18, time: 28.704, data_time: 25.452, memory: 6559, loss_rpn_cls_tgt: 0.0781, loss_rpn_bbox_tgt: 0.0023, loss_cls_tgt: 0.1059, acc_tgt: 99.2188, loss_bbox_tgt: 0.0337, loss_feat_neck_0_adversarial: 0.7038, loss: 0.9237
[                                                  ] 0/375, elapsed: 0s, ETA:[                                ] 1/375, 0.1 task/s, elapsed: 10s, ETA:  3766s[                                ] 2/375, 0.2 task/s, elapsed: 10s, ETA:  1878s[                                ] 3/375, 0.3 task/s, elapsed: 10s, ETA:  1249s[                                ] 4/375, 0.4 task/s, elapsed: 10s, ETA:   934s[                                ] 5/375, 0.5 task/s, elapsed: 10s, ETA:   751s[                                ] 6/375, 0.6 task/s, elapsed: 10s, ETA:   624s[                                ] 7/375, 0.7 task/s, elapsed: 10s, ETA:   533s[                                ] 8/375, 0.8 task/s, elapsed: 10s, ETA:   465s[                                ] 9/375, 0.9 task/s, elapsed: 10s, ETA:   415s[                               ] 10/375, 1.0 task/s, elapsed: 10s, ETA:   373s[                               ] 11/375, 1.1 task/s, elapsed: 10s, ETA:   338s[                               ] 12/375, 1.2 task/s, elapsed: 10s, ETA:   309s[>                              ] 13/375, 1.3 task/s, elapsed: 10s, ETA:   287s[>                              ] 14/375, 1.4 task/s, elapsed: 10s, ETA:   265s[>                              ] 15/375, 1.5 task/s, elapsed: 10s, ETA:   247s[>                              ] 16/375, 1.6 task/s, elapsed: 10s, ETA:   231s[>                              ] 17/375, 1.6 task/s, elapsed: 10s, ETA:   218s[>                              ] 18/375, 1.7 task/s, elapsed: 10s, ETA:   206s[>                              ] 19/375, 1.8 task/s, elapsed: 10s, ETA:   194s[>                              ] 20/375, 1.9 task/s, elapsed: 10s, ETA:   184s[>                              ] 21/375, 2.0 task/s, elapsed: 10s, ETA:   176s[>                              ] 22/375, 2.1 task/s, elapsed: 10s, ETA:   167s[>                              ] 23/375, 2.2 task/s, elapsed: 10s, ETA:   160s[>                              ] 24/375, 2.3 task/s, elapsed: 10s, ETA:   153s[>>                             ] 25/375, 2.4 task/s, elapsed: 11s, ETA:   147s[>>                             ] 26/375, 2.5 task/s, elapsed: 11s, ETA:   141s[>>                             ] 27/375, 2.6 task/s, elapsed: 11s, ETA:   135s[>>                             ] 28/375, 2.7 task/s, elapsed: 11s, ETA:   130s[>>                             ] 29/375, 2.7 task/s, elapsed: 11s, ETA:   126s[>>                             ] 30/375, 2.8 task/s, elapsed: 11s, ETA:   122s[>>                             ] 31/375, 2.9 task/s, elapsed: 11s, ETA:   117s[>>                             ] 32/375, 3.0 task/s, elapsed: 11s, ETA:   113s[>>                             ] 33/375, 3.1 task/s, elapsed: 11s, ETA:   110s[>>                             ] 34/375, 3.2 task/s, elapsed: 11s, ETA:   107s[>>                             ] 35/375, 3.3 task/s, elapsed: 11s, ETA:   103s[>>                             ] 36/375, 3.4 task/s, elapsed: 11s, ETA:   100s[>>>                            ] 37/375, 3.5 task/s, elapsed: 11s, ETA:    98s[>>>                            ] 38/375, 3.5 task/s, elapsed: 11s, ETA:    95s[>>>                            ] 39/375, 3.6 task/s, elapsed: 11s, ETA:    92s[>>>                            ] 40/375, 3.7 task/s, elapsed: 11s, ETA:    90s[>>>                            ] 41/375, 3.8 task/s, elapsed: 11s, ETA:    88s[>>>                            ] 42/375, 3.9 task/s, elapsed: 11s, ETA:    86s[>>>                            ] 43/375, 4.0 task/s, elapsed: 11s, ETA:    83s[>>>                            ] 44/375, 4.1 task/s, elapsed: 11s, ETA:    81s[>>>                            ] 45/375, 4.1 task/s, elapsed: 11s, ETA:    80s[>>>                            ] 46/375, 4.2 task/s, elapsed: 11s, ETA:    78s[>>>                            ] 47/375, 4.3 task/s, elapsed: 11s, ETA:    76s[>>>                            ] 48/375, 4.4 task/s, elapsed: 11s, ETA:    74s[>>>>                           ] 49/375, 4.5 task/s, elapsed: 11s, ETA:    73s[>>>>                           ] 50/375, 4.6 task/s, elapsed: 11s, ETA:    71s[>>>>                           ] 51/375, 4.7 task/s, elapsed: 11s, ETA:    69s[>>>>                           ] 52/375, 4.8 task/s, elapsed: 11s, ETA:    68s[>>>>                           ] 53/375, 4.8 task/s, elapsed: 11s, ETA:    67s[>>>>                           ] 54/375, 4.9 task/s, elapsed: 11s, ETA:    65s[>>>>                           ] 55/375, 5.0 task/s, elapsed: 11s, ETA:    64s[>>>>                           ] 56/375, 5.1 task/s, elapsed: 11s, ETA:    63s[>>>>                           ] 57/375, 5.2 task/s, elapsed: 11s, ETA:    62s[>>>>                           ] 58/375, 5.2 task/s, elapsed: 11s, ETA:    60s[>>>>                           ] 59/375, 5.3 task/s, elapsed: 11s, ETA:    59s[>>>>                           ] 60/375, 5.4 task/s, elapsed: 11s, ETA:    58s[>>>>>                          ] 61/375, 5.5 task/s, elapsed: 11s, ETA:    57s[>>>>>                          ] 62/375, 5.6 task/s, elapsed: 11s, ETA:    56s[>>>>>                          ] 63/375, 5.7 task/s, elapsed: 11s, ETA:    55s[>>>>>                          ] 64/375, 5.8 task/s, elapsed: 11s, ETA:    54s[>>>>>                          ] 65/375, 5.8 task/s, elapsed: 11s, ETA:    53s[>>>>>                          ] 66/375, 5.9 task/s, elapsed: 11s, ETA:    52s[>>>>>                          ] 67/375, 6.0 task/s, elapsed: 11s, ETA:    51s[>>>>>                          ] 68/375, 6.1 task/s, elapsed: 11s, ETA:    51s[>>>>>                          ] 69/375, 6.1 task/s, elapsed: 11s, ETA:    50s[>>>>>                          ] 70/375, 6.2 task/s, elapsed: 11s, ETA:    49s[>>>>>                          ] 71/375, 6.3 task/s, elapsed: 11s, ETA:    48s[>>>>>                          ] 72/375, 6.4 task/s, elapsed: 11s, ETA:    47s[>>>>>>                         ] 73/375, 6.4 task/s, elapsed: 11s, ETA:    47s[>>>>>>                         ] 74/375, 6.5 task/s, elapsed: 11s, ETA:    46s[>>>>>>                         ] 75/375, 6.6 task/s, elapsed: 11s, ETA:    45s[>>>>>>                         ] 76/375, 6.7 task/s, elapsed: 11s, ETA:    45s[>>>>>>                         ] 77/375, 6.7 task/s, elapsed: 11s, ETA:    44s[>>>>>>                         ] 78/375, 6.8 task/s, elapsed: 11s, ETA:    43s[>>>>>>                         ] 79/375, 6.9 task/s, elapsed: 11s, ETA:    43s[>>>>>>                         ] 80/375, 7.0 task/s, elapsed: 11s, ETA:    42s[>>>>>>                         ] 81/375, 7.1 task/s, elapsed: 11s, ETA:    42s[>>>>>>                         ] 82/375, 7.1 task/s, elapsed: 11s, ETA:    41s[>>>>>>                         ] 83/375, 7.2 task/s, elapsed: 11s, ETA:    40s[>>>>>>                         ] 84/375, 7.3 task/s, elapsed: 11s, ETA:    40s[>>>>>>>                        ] 85/375, 7.4 task/s, elapsed: 12s, ETA:    39s[>>>>>>>                        ] 86/375, 7.4 task/s, elapsed: 12s, ETA:    39s[>>>>>>>                        ] 87/375, 7.5 task/s, elapsed: 12s, ETA:    38s[>>>>>>>                        ] 88/375, 7.6 task/s, elapsed: 12s, ETA:    38s[>>>>>>>                        ] 89/375, 7.7 task/s, elapsed: 12s, ETA:    37s[>>>>>>>                        ] 90/375, 7.7 task/s, elapsed: 12s, ETA:    37s[>>>>>>>                        ] 91/375, 7.8 task/s, elapsed: 12s, ETA:    36s[>>>>>>>                        ] 92/375, 7.9 task/s, elapsed: 12s, ETA:    36s[>>>>>>>                        ] 93/375, 8.0 task/s, elapsed: 12s, ETA:    35s[>>>>>>>                        ] 94/375, 8.0 task/s, elapsed: 12s, ETA:    35s[>>>>>>>                        ] 95/375, 8.1 task/s, elapsed: 12s, ETA:    34s[>>>>>>>                        ] 96/375, 8.2 task/s, elapsed: 12s, ETA:    34s[>>>>>>>>                       ] 97/375, 8.2 task/s, elapsed: 12s, ETA:    34s[>>>>>>>>                       ] 98/375, 8.3 task/s, elapsed: 12s, ETA:    33s[>>>>>>>>                       ] 99/375, 8.4 task/s, elapsed: 12s, ETA:    33s[>>>>>>>>                      ] 100/375, 8.5 task/s, elapsed: 12s, ETA:    32s[>>>>>>>>                      ] 101/375, 8.5 task/s, elapsed: 12s, ETA:    32s[>>>>>>>>                      ] 102/375, 8.6 task/s, elapsed: 12s, ETA:    32s[>>>>>>>>                      ] 103/375, 8.7 task/s, elapsed: 12s, ETA:    31s[>>>>>>>>                      ] 104/375, 8.8 task/s, elapsed: 12s, ETA:    31s[>>>>>>>>                      ] 105/375, 8.8 task/s, elapsed: 12s, ETA:    31s[>>>>>>>>                      ] 106/375, 8.9 task/s, elapsed: 12s, ETA:    30s[>>>>>>>>                      ] 107/375, 9.0 task/s, elapsed: 12s, ETA:    30s[>>>>>>>>                      ] 108/375, 9.1 task/s, elapsed: 12s, ETA:    29s[>>>>>>>>                      ] 109/375, 9.1 task/s, elapsed: 12s, ETA:    29s[>>>>>>>>                      ] 110/375, 9.2 task/s, elapsed: 12s, ETA:    29s[>>>>>>>>                      ] 111/375, 9.3 task/s, elapsed: 12s, ETA:    28s[>>>>>>>>                      ] 112/375, 9.4 task/s, elapsed: 12s, ETA:    28s[>>>>>>>>>                     ] 113/375, 9.4 task/s, elapsed: 12s, ETA:    28s[>>>>>>>>>                     ] 114/375, 9.5 task/s, elapsed: 12s, ETA:    28s[>>>>>>>>>                     ] 115/375, 9.6 task/s, elapsed: 12s, ETA:    27s[>>>>>>>>>                     ] 116/375, 9.6 task/s, elapsed: 12s, ETA:    27s[>>>>>>>>>                     ] 117/375, 9.7 task/s, elapsed: 12s, ETA:    27s[>>>>>>>>>                     ] 118/375, 9.8 task/s, elapsed: 12s, ETA:    26s[>>>>>>>>>                     ] 119/375, 9.8 task/s, elapsed: 12s, ETA:    26s[>>>>>>>>>                     ] 120/375, 9.9 task/s, elapsed: 12s, ETA:    26s[>>>>>>>>>                    ] 121/375, 10.0 task/s, elapsed: 12s, ETA:    26s[>>>>>>>>>                    ] 122/375, 10.0 task/s, elapsed: 12s, ETA:    25s[>>>>>>>>>                    ] 123/375, 10.1 task/s, elapsed: 12s, ETA:    25s[>>>>>>>>>                    ] 124/375, 10.2 task/s, elapsed: 12s, ETA:    25s[>>>>>>>>>                    ] 125/375, 10.2 task/s, elapsed: 12s, ETA:    24s[>>>>>>>>>                    ] 126/375, 10.3 task/s, elapsed: 12s, ETA:    24s[>>>>>>>>>                    ] 127/375, 10.4 task/s, elapsed: 12s, ETA:    24s[>>>>>>>>>                    ] 128/375, 10.5 task/s, elapsed: 12s, ETA:    24s[>>>>>>>>>                    ] 129/375, 10.5 task/s, elapsed: 12s, ETA:    23s[>>>>>>>>>>                   ] 130/375, 10.6 task/s, elapsed: 12s, ETA:    23s[>>>>>>>>>>                   ] 131/375, 10.7 task/s, elapsed: 12s, ETA:    23s[>>>>>>>>>>                   ] 132/375, 10.7 task/s, elapsed: 12s, ETA:    23s[>>>>>>>>>>                   ] 133/375, 10.8 task/s, elapsed: 12s, ETA:    22s[>>>>>>>>>>                   ] 134/375, 10.8 task/s, elapsed: 12s, ETA:    22s[>>>>>>>>>>                   ] 135/375, 10.9 task/s, elapsed: 12s, ETA:    22s[>>>>>>>>>>                   ] 136/375, 11.0 task/s, elapsed: 12s, ETA:    22s[>>>>>>>>>>                   ] 137/375, 11.0 task/s, elapsed: 12s, ETA:    22s[>>>>>>>>>>                   ] 138/375, 11.1 task/s, elapsed: 12s, ETA:    21s[>>>>>>>>>>                   ] 139/375, 11.2 task/s, elapsed: 12s, ETA:    21s[>>>>>>>>>>                   ] 140/375, 11.3 task/s, elapsed: 12s, ETA:    21s[>>>>>>>>>>                   ] 141/375, 11.3 task/s, elapsed: 12s, ETA:    21s[>>>>>>>>>>                   ] 142/375, 11.4 task/s, elapsed: 12s, ETA:    21s[>>>>>>>>>>>                  ] 143/375, 11.4 task/s, elapsed: 12s, ETA:    20s[>>>>>>>>>>>                  ] 144/375, 11.5 task/s, elapsed: 12s, ETA:    20s[>>>>>>>>>>>                  ] 145/375, 11.5 task/s, elapsed: 13s, ETA:    20s[>>>>>>>>>>>                  ] 146/375, 11.6 task/s, elapsed: 13s, ETA:    20s[>>>>>>>>>>>                  ] 147/375, 11.7 task/s, elapsed: 13s, ETA:    19s[>>>>>>>>>>>                  ] 148/375, 11.8 task/s, elapsed: 13s, ETA:    19s[>>>>>>>>>>>                  ] 149/375, 11.8 task/s, elapsed: 13s, ETA:    19s[>>>>>>>>>>>                  ] 150/375, 11.9 task/s, elapsed: 13s, ETA:    19s[>>>>>>>>>>>                  ] 151/375, 12.0 task/s, elapsed: 13s, ETA:    19s[>>>>>>>>>>>                  ] 152/375, 12.0 task/s, elapsed: 13s, ETA:    19s[>>>>>>>>>>>                  ] 153/375, 12.0 task/s, elapsed: 13s, ETA:    18s[>>>>>>>>>>>                  ] 154/375, 12.1 task/s, elapsed: 13s, ETA:    18s[>>>>>>>>>>>                  ] 155/375, 12.2 task/s, elapsed: 13s, ETA:    18s[>>>>>>>>>>>>                 ] 156/375, 12.3 task/s, elapsed: 13s, ETA:    18s[>>>>>>>>>>>>                 ] 157/375, 12.3 task/s, elapsed: 13s, ETA:    18s[>>>>>>>>>>>>                 ] 158/375, 12.4 task/s, elapsed: 13s, ETA:    18s[>>>>>>>>>>>>                 ] 159/375, 12.5 task/s, elapsed: 13s, ETA:    17s[>>>>>>>>>>>>                 ] 160/375, 12.5 task/s, elapsed: 13s, ETA:    17s[>>>>>>>>>>>>                 ] 161/375, 12.5 task/s, elapsed: 13s, ETA:    17s[>>>>>>>>>>>>                 ] 162/375, 12.6 task/s, elapsed: 13s, ETA:    17s[>>>>>>>>>>>>                 ] 163/375, 12.7 task/s, elapsed: 13s, ETA:    17s[>>>>>>>>>>>>                 ] 164/375, 12.8 task/s, elapsed: 13s, ETA:    17s[>>>>>>>>>>>>                 ] 165/375, 12.8 task/s, elapsed: 13s, ETA:    16s[>>>>>>>>>>>>                 ] 166/375, 12.9 task/s, elapsed: 13s, ETA:    16s[>>>>>>>>>>>>                 ] 167/375, 12.9 task/s, elapsed: 13s, ETA:    16s[>>>>>>>>>>>>                 ] 168/375, 13.0 task/s, elapsed: 13s, ETA:    16s[>>>>>>>>>>>>>                ] 169/375, 13.0 task/s, elapsed: 13s, ETA:    16s[>>>>>>>>>>>>>                ] 170/375, 13.1 task/s, elapsed: 13s, ETA:    16s[>>>>>>>>>>>>>                ] 171/375, 13.2 task/s, elapsed: 13s, ETA:    15s[>>>>>>>>>>>>>                ] 172/375, 13.3 task/s, elapsed: 13s, ETA:    15s[>>>>>>>>>>>>>                ] 173/375, 13.3 task/s, elapsed: 13s, ETA:    15s[>>>>>>>>>>>>>                ] 174/375, 13.3 task/s, elapsed: 13s, ETA:    15s[>>>>>>>>>>>>>                ] 175/375, 13.4 task/s, elapsed: 13s, ETA:    15s[>>>>>>>>>>>>>                ] 176/375, 13.5 task/s, elapsed: 13s, ETA:    15s[>>>>>>>>>>>>>                ] 177/375, 13.5 task/s, elapsed: 13s, ETA:    15s[>>>>>>>>>>>>>                ] 178/375, 13.6 task/s, elapsed: 13s, ETA:    15s[>>>>>>>>>>>>>                ] 179/375, 13.7 task/s, elapsed: 13s, ETA:    14s[>>>>>>>>>>>>>                ] 180/375, 13.7 task/s, elapsed: 13s, ETA:    14s[>>>>>>>>>>>>>                ] 181/375, 13.7 task/s, elapsed: 13s, ETA:    14s[>>>>>>>>>>>>>>               ] 182/375, 13.8 task/s, elapsed: 13s, ETA:    14s[>>>>>>>>>>>>>>               ] 183/375, 13.9 task/s, elapsed: 13s, ETA:    14s[>>>>>>>>>>>>>>               ] 184/375, 14.0 task/s, elapsed: 13s, ETA:    14s[>>>>>>>>>>>>>>               ] 185/375, 14.0 task/s, elapsed: 13s, ETA:    14s[>>>>>>>>>>>>>>               ] 186/375, 14.0 task/s, elapsed: 13s, ETA:    13s[>>>>>>>>>>>>>>               ] 187/375, 14.1 task/s, elapsed: 13s, ETA:    13s[>>>>>>>>>>>>>>               ] 188/375, 14.2 task/s, elapsed: 13s, ETA:    13s[>>>>>>>>>>>>>>               ] 189/375, 14.2 task/s, elapsed: 13s, ETA:    13s[>>>>>>>>>>>>>>               ] 190/375, 14.3 task/s, elapsed: 13s, ETA:    13s[>>>>>>>>>>>>>>               ] 191/375, 14.3 task/s, elapsed: 13s, ETA:    13s[>>>>>>>>>>>>>>               ] 192/375, 14.4 task/s, elapsed: 13s, ETA:    13s[>>>>>>>>>>>>>>               ] 193/375, 14.4 task/s, elapsed: 13s, ETA:    13s[>>>>>>>>>>>>>>>              ] 194/375, 14.5 task/s, elapsed: 13s, ETA:    12s[>>>>>>>>>>>>>>>              ] 195/375, 14.6 task/s, elapsed: 13s, ETA:    12s[>>>>>>>>>>>>>>>              ] 196/375, 14.6 task/s, elapsed: 13s, ETA:    12s[>>>>>>>>>>>>>>>              ] 197/375, 14.7 task/s, elapsed: 13s, ETA:    12s[>>>>>>>>>>>>>>>              ] 198/375, 14.7 task/s, elapsed: 13s, ETA:    12s[>>>>>>>>>>>>>>>              ] 199/375, 14.8 task/s, elapsed: 13s, ETA:    12s[>>>>>>>>>>>>>>>              ] 200/375, 14.9 task/s, elapsed: 13s, ETA:    12s[>>>>>>>>>>>>>>>              ] 201/375, 14.9 task/s, elapsed: 14s, ETA:    12s[>>>>>>>>>>>>>>>              ] 202/375, 14.9 task/s, elapsed: 14s, ETA:    12s[>>>>>>>>>>>>>>>              ] 203/375, 15.0 task/s, elapsed: 14s, ETA:    11s[>>>>>>>>>>>>>>>              ] 204/375, 15.1 task/s, elapsed: 14s, ETA:    11s[>>>>>>>>>>>>>>>              ] 205/375, 15.1 task/s, elapsed: 14s, ETA:    11s[>>>>>>>>>>>>>>>              ] 206/375, 15.2 task/s, elapsed: 14s, ETA:    11s[>>>>>>>>>>>>>>>>             ] 207/375, 15.2 task/s, elapsed: 14s, ETA:    11s[>>>>>>>>>>>>>>>>             ] 208/375, 15.3 task/s, elapsed: 14s, ETA:    11s[>>>>>>>>>>>>>>>>             ] 209/375, 15.3 task/s, elapsed: 14s, ETA:    11s[>>>>>>>>>>>>>>>>             ] 210/375, 15.4 task/s, elapsed: 14s, ETA:    11s[>>>>>>>>>>>>>>>>             ] 211/375, 15.5 task/s, elapsed: 14s, ETA:    11s[>>>>>>>>>>>>>>>>             ] 212/375, 15.5 task/s, elapsed: 14s, ETA:    10s[>>>>>>>>>>>>>>>>             ] 213/375, 15.5 task/s, elapsed: 14s, ETA:    10s[>>>>>>>>>>>>>>>>             ] 214/375, 15.6 task/s, elapsed: 14s, ETA:    10s[>>>>>>>>>>>>>>>>             ] 215/375, 15.7 task/s, elapsed: 14s, ETA:    10s[>>>>>>>>>>>>>>>>             ] 216/375, 15.8 task/s, elapsed: 14s, ETA:    10s[>>>>>>>>>>>>>>>>             ] 217/375, 15.7 task/s, elapsed: 14s, ETA:    10s[>>>>>>>>>>>>>>>>             ] 218/375, 15.8 task/s, elapsed: 14s, ETA:    10s[>>>>>>>>>>>>>>>>             ] 219/375, 15.9 task/s, elapsed: 14s, ETA:    10s[>>>>>>>>>>>>>>>>>            ] 220/375, 16.0 task/s, elapsed: 14s, ETA:    10s[>>>>>>>>>>>>>>>>>            ] 221/375, 15.9 task/s, elapsed: 14s, ETA:    10s[>>>>>>>>>>>>>>>>>            ] 222/375, 16.0 task/s, elapsed: 14s, ETA:    10s[>>>>>>>>>>>>>>>>>            ] 223/375, 16.1 task/s, elapsed: 14s, ETA:     9s[>>>>>>>>>>>>>>>>>            ] 224/375, 16.2 task/s, elapsed: 14s, ETA:     9s[>>>>>>>>>>>>>>>>>            ] 225/375, 16.1 task/s, elapsed: 14s, ETA:     9s[>>>>>>>>>>>>>>>>>            ] 226/375, 16.2 task/s, elapsed: 14s, ETA:     9s[>>>>>>>>>>>>>>>>>            ] 227/375, 16.3 task/s, elapsed: 14s, ETA:     9s[>>>>>>>>>>>>>>>>>            ] 228/375, 16.4 task/s, elapsed: 14s, ETA:     9s[>>>>>>>>>>>>>>>>>            ] 229/375, 16.3 task/s, elapsed: 14s, ETA:     9s[>>>>>>>>>>>>>>>>>            ] 230/375, 16.4 task/s, elapsed: 14s, ETA:     9s[>>>>>>>>>>>>>>>>>            ] 231/375, 16.5 task/s, elapsed: 14s, ETA:     9s[>>>>>>>>>>>>>>>>>            ] 232/375, 16.6 task/s, elapsed: 14s, ETA:     9s[>>>>>>>>>>>>>>>>>>           ] 233/375, 16.5 task/s, elapsed: 14s, ETA:     9s[>>>>>>>>>>>>>>>>>>           ] 234/375, 16.6 task/s, elapsed: 14s, ETA:     8s[>>>>>>>>>>>>>>>>>>           ] 235/375, 16.7 task/s, elapsed: 14s, ETA:     8s[>>>>>>>>>>>>>>>>>>           ] 236/375, 16.8 task/s, elapsed: 14s, ETA:     8s[>>>>>>>>>>>>>>>>>>           ] 237/375, 16.7 task/s, elapsed: 14s, ETA:     8s[>>>>>>>>>>>>>>>>>>           ] 238/375, 16.8 task/s, elapsed: 14s, ETA:     8s[>>>>>>>>>>>>>>>>>>           ] 239/375, 16.9 task/s, elapsed: 14s, ETA:     8s[>>>>>>>>>>>>>>>>>>           ] 240/375, 17.0 task/s, elapsed: 14s, ETA:     8s[>>>>>>>>>>>>>>>>>>           ] 241/375, 16.9 task/s, elapsed: 14s, ETA:     8s[>>>>>>>>>>>>>>>>>>           ] 242/375, 17.0 task/s, elapsed: 14s, ETA:     8s[>>>>>>>>>>>>>>>>>>           ] 243/375, 17.1 task/s, elapsed: 14s, ETA:     8s[>>>>>>>>>>>>>>>>>>           ] 244/375, 17.2 task/s, elapsed: 14s, ETA:     8s[>>>>>>>>>>>>>>>>>>           ] 245/375, 17.1 task/s, elapsed: 14s, ETA:     8s[>>>>>>>>>>>>>>>>>>>          ] 246/375, 17.2 task/s, elapsed: 14s, ETA:     7s[>>>>>>>>>>>>>>>>>>>          ] 247/375, 17.3 task/s, elapsed: 14s, ETA:     7s[>>>>>>>>>>>>>>>>>>>          ] 248/375, 17.4 task/s, elapsed: 14s, ETA:     7s[>>>>>>>>>>>>>>>>>>>          ] 249/375, 17.3 task/s, elapsed: 14s, ETA:     7s[>>>>>>>>>>>>>>>>>>>          ] 250/375, 17.4 task/s, elapsed: 14s, ETA:     7s[>>>>>>>>>>>>>>>>>>>          ] 251/375, 17.5 task/s, elapsed: 14s, ETA:     7s[>>>>>>>>>>>>>>>>>>>          ] 252/375, 17.6 task/s, elapsed: 14s, ETA:     7s[>>>>>>>>>>>>>>>>>>>          ] 253/375, 17.5 task/s, elapsed: 14s, ETA:     7s[>>>>>>>>>>>>>>>>>>>          ] 254/375, 17.6 task/s, elapsed: 14s, ETA:     7s[>>>>>>>>>>>>>>>>>>>          ] 255/375, 17.7 task/s, elapsed: 14s, ETA:     7s[>>>>>>>>>>>>>>>>>>>          ] 256/375, 17.8 task/s, elapsed: 14s, ETA:     7s[>>>>>>>>>>>>>>>>>>>          ] 257/375, 17.7 task/s, elapsed: 14s, ETA:     7s[>>>>>>>>>>>>>>>>>>>          ] 258/375, 17.8 task/s, elapsed: 14s, ETA:     7s[>>>>>>>>>>>>>>>>>>>>         ] 259/375, 17.9 task/s, elapsed: 14s, ETA:     6s[>>>>>>>>>>>>>>>>>>>>         ] 260/375, 17.9 task/s, elapsed: 14s, ETA:     6s[>>>>>>>>>>>>>>>>>>>>         ] 261/375, 17.9 task/s, elapsed: 15s, ETA:     6s[>>>>>>>>>>>>>>>>>>>>         ] 262/375, 18.0 task/s, elapsed: 15s, ETA:     6s[>>>>>>>>>>>>>>>>>>>>         ] 263/375, 18.1 task/s, elapsed: 15s, ETA:     6s[>>>>>>>>>>>>>>>>>>>>         ] 264/375, 18.1 task/s, elapsed: 15s, ETA:     6s[>>>>>>>>>>>>>>>>>>>>         ] 265/375, 18.1 task/s, elapsed: 15s, ETA:     6s[>>>>>>>>>>>>>>>>>>>>         ] 266/375, 18.2 task/s, elapsed: 15s, ETA:     6s[>>>>>>>>>>>>>>>>>>>>         ] 267/375, 18.3 task/s, elapsed: 15s, ETA:     6s[>>>>>>>>>>>>>>>>>>>>         ] 268/375, 18.3 task/s, elapsed: 15s, ETA:     6s[>>>>>>>>>>>>>>>>>>>>         ] 269/375, 18.3 task/s, elapsed: 15s, ETA:     6s[>>>>>>>>>>>>>>>>>>>>         ] 270/375, 18.4 task/s, elapsed: 15s, ETA:     6s[>>>>>>>>>>>>>>>>>>>>         ] 271/375, 18.4 task/s, elapsed: 15s, ETA:     6s[>>>>>>>>>>>>>>>>>>>>>        ] 272/375, 18.5 task/s, elapsed: 15s, ETA:     6s[>>>>>>>>>>>>>>>>>>>>>        ] 273/375, 18.5 task/s, elapsed: 15s, ETA:     6s[>>>>>>>>>>>>>>>>>>>>>        ] 274/375, 18.6 task/s, elapsed: 15s, ETA:     5s[>>>>>>>>>>>>>>>>>>>>>        ] 275/375, 18.6 task/s, elapsed: 15s, ETA:     5s[>>>>>>>>>>>>>>>>>>>>>        ] 276/375, 18.7 task/s, elapsed: 15s, ETA:     5s[>>>>>>>>>>>>>>>>>>>>>        ] 277/375, 18.7 task/s, elapsed: 15s, ETA:     5s[>>>>>>>>>>>>>>>>>>>>>        ] 278/375, 18.7 task/s, elapsed: 15s, ETA:     5s[>>>>>>>>>>>>>>>>>>>>>        ] 279/375, 18.8 task/s, elapsed: 15s, ETA:     5s[>>>>>>>>>>>>>>>>>>>>>        ] 280/375, 18.9 task/s, elapsed: 15s, ETA:     5s[>>>>>>>>>>>>>>>>>>>>>        ] 281/375, 18.9 task/s, elapsed: 15s, ETA:     5s[>>>>>>>>>>>>>>>>>>>>>        ] 282/375, 18.9 task/s, elapsed: 15s, ETA:     5s[>>>>>>>>>>>>>>>>>>>>>        ] 283/375, 19.0 task/s, elapsed: 15s, ETA:     5s[>>>>>>>>>>>>>>>>>>>>>        ] 284/375, 19.1 task/s, elapsed: 15s, ETA:     5s[>>>>>>>>>>>>>>>>>>>>>>       ] 285/375, 19.0 task/s, elapsed: 15s, ETA:     5s[>>>>>>>>>>>>>>>>>>>>>>       ] 286/375, 19.1 task/s, elapsed: 15s, ETA:     5s[>>>>>>>>>>>>>>>>>>>>>>       ] 287/375, 19.2 task/s, elapsed: 15s, ETA:     5s[>>>>>>>>>>>>>>>>>>>>>>       ] 288/375, 19.2 task/s, elapsed: 15s, ETA:     5s[>>>>>>>>>>>>>>>>>>>>>>       ] 289/375, 19.2 task/s, elapsed: 15s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>       ] 290/375, 19.3 task/s, elapsed: 15s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>       ] 291/375, 19.4 task/s, elapsed: 15s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>       ] 292/375, 19.4 task/s, elapsed: 15s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>       ] 293/375, 19.4 task/s, elapsed: 15s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>       ] 294/375, 19.5 task/s, elapsed: 15s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>       ] 295/375, 19.5 task/s, elapsed: 15s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>       ] 296/375, 19.6 task/s, elapsed: 15s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>       ] 297/375, 19.6 task/s, elapsed: 15s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>>      ] 298/375, 19.7 task/s, elapsed: 15s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>>      ] 299/375, 19.7 task/s, elapsed: 15s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>>      ] 300/375, 19.8 task/s, elapsed: 15s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>>      ] 301/375, 19.8 task/s, elapsed: 15s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>>      ] 302/375, 19.8 task/s, elapsed: 15s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>>      ] 303/375, 19.9 task/s, elapsed: 15s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>>      ] 304/375, 20.0 task/s, elapsed: 15s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>>      ] 305/375, 19.9 task/s, elapsed: 15s, ETA:     4s[>>>>>>>>>>>>>>>>>>>>>>>      ] 306/375, 20.0 task/s, elapsed: 15s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>      ] 307/375, 20.1 task/s, elapsed: 15s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>      ] 308/375, 20.1 task/s, elapsed: 15s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>      ] 309/375, 20.1 task/s, elapsed: 15s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>      ] 310/375, 20.2 task/s, elapsed: 15s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>>     ] 311/375, 20.2 task/s, elapsed: 15s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>>     ] 312/375, 20.3 task/s, elapsed: 15s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>>     ] 313/375, 20.3 task/s, elapsed: 15s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>>     ] 314/375, 20.3 task/s, elapsed: 15s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>>     ] 315/375, 20.4 task/s, elapsed: 15s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>>     ] 316/375, 20.5 task/s, elapsed: 15s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>>     ] 317/375, 20.5 task/s, elapsed: 15s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>>     ] 318/375, 20.5 task/s, elapsed: 15s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>>     ] 319/375, 20.6 task/s, elapsed: 15s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>>     ] 320/375, 20.7 task/s, elapsed: 15s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>>     ] 321/375, 20.6 task/s, elapsed: 16s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>>     ] 322/375, 20.7 task/s, elapsed: 16s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>>     ] 323/375, 20.8 task/s, elapsed: 16s, ETA:     3s[>>>>>>>>>>>>>>>>>>>>>>>>>    ] 324/375, 20.8 task/s, elapsed: 16s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>    ] 325/375, 20.8 task/s, elapsed: 16s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>    ] 326/375, 20.9 task/s, elapsed: 16s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>    ] 327/375, 20.9 task/s, elapsed: 16s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>    ] 328/375, 21.0 task/s, elapsed: 16s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>    ] 329/375, 21.0 task/s, elapsed: 16s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>    ] 330/375, 21.0 task/s, elapsed: 16s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>    ] 331/375, 21.1 task/s, elapsed: 16s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>    ] 332/375, 21.2 task/s, elapsed: 16s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>    ] 333/375, 21.1 task/s, elapsed: 16s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>    ] 334/375, 21.2 task/s, elapsed: 16s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>    ] 335/375, 21.2 task/s, elapsed: 16s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>    ] 336/375, 21.3 task/s, elapsed: 16s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 337/375, 21.3 task/s, elapsed: 16s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 338/375, 21.3 task/s, elapsed: 16s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 339/375, 21.4 task/s, elapsed: 16s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 340/375, 21.5 task/s, elapsed: 16s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 341/375, 21.4 task/s, elapsed: 16s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 342/375, 21.5 task/s, elapsed: 16s, ETA:     2s[>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 343/375, 21.6 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 344/375, 21.6 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 345/375, 21.6 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 346/375, 21.7 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 347/375, 21.7 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 348/375, 21.8 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>   ] 349/375, 21.7 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 350/375, 21.8 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 351/375, 21.9 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 352/375, 21.9 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 353/375, 21.9 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 354/375, 22.0 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 355/375, 22.0 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 356/375, 22.1 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 357/375, 22.1 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 358/375, 22.1 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 359/375, 22.2 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 360/375, 22.2 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 361/375, 22.2 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>  ] 362/375, 22.3 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 363/375, 22.3 task/s, elapsed: 16s, ETA:     1s[>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 364/375, 22.4 task/s, elapsed: 16s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 365/375, 22.4 task/s, elapsed: 16s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 366/375, 22.4 task/s, elapsed: 16s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 367/375, 22.5 task/s, elapsed: 16s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 368/375, 22.6 task/s, elapsed: 16s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 369/375, 22.5 task/s, elapsed: 16s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 370/375, 22.6 task/s, elapsed: 16s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 371/375, 22.6 task/s, elapsed: 16s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 372/375, 22.7 task/s, elapsed: 16s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 373/375, 22.7 task/s, elapsed: 16s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>> ] 374/375, 22.7 task/s, elapsed: 16s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>] 375/375, 22.8 task/s, elapsed: 16s, ETA:     0s[>>>>>>>>>>>>>>>>>>>>>>>>>>>>>] 376/375, 22.9 task/s, elapsed: 16s, ETA:     0s

2021-10-11 20:17:19,259 - mmdet - INFO - Evaluating bbox...
INFO:mmdet:Evaluating bbox...
Loading and preparing results...
DONE (t=0.00s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.14s).
Accumulating evaluation results...
DONE (t=0.03s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.383
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.594
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.441
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.070
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.420
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.698
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.431
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.431
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.431
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = 0.112
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.467
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.765
Calculating miss-rate@FPPI and LAMR...
LAMR = 0.45760202256595817
2021-10-11 20:17:19,455 - mmdet - INFO - Exp name: adv_0.py
INFO:mmdet:Exp name: adv_0.py
2021-10-11 20:17:19,455 - mmdet - INFO - Epoch(val) [1][94]	bbox_LAMR: 0.4576, bbox_mAP: 0.3830, bbox_mAP_50: 0.5940, bbox_mAP_75: 0.4410, bbox_mAP_s: 0.0700, bbox_mAP_m: 0.4200, bbox_mAP_l: 0.6980, bbox_mAP_copypaste: 0.383 0.594 0.441 0.070 0.420 0.698
INFO:mmdet:Epoch(val) [1][94]	bbox_LAMR: 0.4576, bbox_mAP: 0.3830, bbox_mAP_50: 0.5940, bbox_mAP_75: 0.4410, bbox_mAP_s: 0.0700, bbox_mAP_m: 0.4200, bbox_mAP_l: 0.6980, bbox_mAP_copypaste: 0.383 0.594 0.441 0.070 0.420 0.698
